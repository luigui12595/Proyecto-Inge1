
@model PagedList.IPagedList<ProyectoInge1.Models.ReqFuncional>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.Owin;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Requerimiento funcional</h2>

@using (Html.BeginForm("Index", "ReqFuncional", FormMethod.Get))
{
    <p>
        <div class="row">

            <div class="col-lg-5">
                Buscar por nombre: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input class="btn btn-success" type="submit" value="Buscar" />
            </div>
            <div class="col-lg-1 col-lg-pull-1">
                <a class="btn btn-info" href="../ReqFuncional">Mostrar Todos</a>
            </div>
            <div class="col-lg-2 col-lg-push-5">
                <a class="btn btn-success" href="ReqFuncional/Create">Crear</a>
            </div>
        </div>
    </p>
}


<table id="table1" class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Nombre", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Sprint", "Index", new { sortOrder = ViewBag.RolSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Módulo", "Index", new { sortOrder = ViewBag.ProySortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Estado", "Index", new { sortOrder = ViewBag.ProySortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id='@(item.id)' onclick="gotoDetails(this)">
                <td>
                    @Html.DisplayFor(modelItem => item.nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sprint)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.modulo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.estado)
                </td>
           </tr>
                    }
    </tbody>
</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

<script src="../../Scripts/jquery_ReqFuncionales.js"></script>
