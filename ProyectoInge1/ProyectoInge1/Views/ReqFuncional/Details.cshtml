

@model ProyectoInge1.Models.ModReqFuncionalInter

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Detalles de Requerimiento</h2>


<div class="elementoModificar" style="display:none">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <dl class="dl-horizontal">
                <br>
                <br>
                <div class="form-group">
                    @Html.LabelFor(model => model.Requerimiento.nomProyecto, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Requerimiento.nomProyecto, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Requerimiento.nomProyecto, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Requerimiento.id, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Requerimiento.id, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Requerimiento.id, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Requerimiento.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Requerimiento.nombre, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Requerimiento.nombre, "", new { @class = "text-danger" })
                </div>
                <fieldset name="estimationinfo">
                    <legend>Datos de Estimación</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.esfuerzo, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Requerimiento.esfuerzo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Requerimiento.esfuerzo, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.prioridad, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Requerimiento.prioridad, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Requerimiento.prioridad, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.fechaInicial, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.TextBoxFor(model => model.Requerimiento.fechaInicial, new { @class = "form-control datepicker", placeholder = "DATE" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.fechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.TextBoxFor(model => model.Requerimiento.fechaFinal, new { @class = "form-control datepicker2", placeholder = "DATE" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.fuente, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownListFor(model => model.Requerimiento.fuente, new SelectList(ViewBag.Lista, "cedula", "names"), new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.responsable1, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownListFor(model => model.Requerimiento.responsable1, new SelectList(ViewBag.Lista, "cedula", "names"), new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.responsable2, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownListFor(model => model.Requerimiento.responsable2, new SelectList(ViewBag.Lista, "cedula", "names"), new { @class = "form-control" })
                    </div>
                </fieldset>
                <fieldset name="especificinfo">
                    <legend>Especificación de Requerimiento</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.TextAreaFor(model => model.Requerimiento.descripcion, new { @class = "form-control", rows = 4 })
                        @Html.ValidationMessageFor(model => model.Requerimiento.descripcion, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.TextAreaFor(model => model.Requerimiento.observaciones, new { @class = "form-control", rows = 4 })
                        @Html.ValidationMessageFor(model => model.Requerimiento.observaciones, "", new { @class = "text-danger" })
                    </div>
                </fieldset>
                <fieldset name="generalinfo">
                    <legend>Datos Generales</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.modulo, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Requerimiento.modulo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Requerimiento.modulo, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownListFor(model => model.Requerimiento.estado, new[] { new SelectListItem() { Text = "Iniciado", Value = "Iniciado" }, new SelectListItem() { Text = "Pendiente", Value = "Pendiente" }, new SelectListItem() { Text = "Terminado", Value = "Terminado" }, new SelectListItem() { Text = "Cancelado", Value = "Cancelado" } }, new { @class = "form-control" })
                        
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.sprint, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Requerimiento.sprint, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Requerimiento.sprint, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.imagen, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" id="image1" name="imagen1" />
                        </div>
                    </div>
                </fieldset>
                <fieldset name="generalinfo">
                    <legend>Criterios de aceptacion</legend>
                    @Html.HiddenFor(model => model.values, new { @id = "output" })
                    <input type="text" id="output" value=" " style="display:none"><br />
                    <a onclick="add_textbox()" class="btn btn-primary">Agregar Criterio</a>
                    <div id="textboxes">
                        <br /><br />
                    </div>
                </fieldset>
            </dl>
        </div>
       

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">            
           <button type="submit" onclick="esconderDetalles()" class="btn btn-primary">Aceptar</button>
            @Html.ActionLink("Cancelar", "Index", null, new { nombreProyecto = Model.Requerimiento.nomProyecto }, new { @class = "btn btn-danger" })
        </div>

    </div>
 }
</div>




        @*---------------------------------------Detalles------------------------------------------------*@
        <div class="elementoEditar">
            <div class="form-horizontal">
                <a class="btn btn-success" onclick="esconderEditar()">Modificar</a>
                <div class="col-lg-2 col-lg-push-6">
                    @Html.ActionLink("Eliminar", "Eliminar", null, new { confirm = true, Requerimiento = Model.Requerimiento.id, nomProy = Model.Requerimiento.nomProyecto }, new { @class = "btn btn-danger", @onclick = "return CancelarE();" })
                </div>
                <dl class="dl-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.nomProyecto, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Requerimiento.nomProyecto, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.Requerimiento.nomProyecto, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.id, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Requerimiento.id, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.Requerimiento.id, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Requerimiento.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Requerimiento.nombre, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.Requerimiento.nombre, "", new { @class = "text-danger" })
                    </div>
                    <fieldset name="estimationinfo">
                        <legend>Datos de Estimación</legend>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.esfuerzo, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Requerimiento.esfuerzo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Requerimiento.esfuerzo, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.prioridad, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Requerimiento.prioridad, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Requerimiento.prioridad, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.fechaInicial, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Requerimiento.fechaInicial, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Requerimiento.fechaInicial, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.fechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Requerimiento.fechaFinal, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Requerimiento.fechaFinal, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.fuente, htmlAttributes: new { @class = "control-label col-md-2" })
                            @{var fuente = Model.UsuarioFuente != null ? Model.UsuarioFuente.nombre + " " + Model.UsuarioFuente.apellidos : " ";}
                            @Html.EditorFor(model => fuente, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Requerimiento.fuente, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.responsable1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <select class="form-control col-md-2" style="width:20em; " id="d" size="2">
                                @{var responsable1 = Model.UsuarioResponsable1 != null ? Model.UsuarioResponsable1.nombre + " " + Model.UsuarioResponsable1.apellidos : " ";}
                                @{var responsable2 = Model.UsuarioResponsable2 != null ? Model.UsuarioResponsable2.nombre + " " + Model.UsuarioResponsable2.apellidos : " ";}
                                <option>
                                    @Html.DisplayFor(model => responsable1, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                </option>

                                <option>
                                    @Html.DisplayFor(model => responsable2, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                </option>
                            </select>
                        </div>
                    </fieldset>
                    <fieldset name="especificinfo">
                        <legend>Especificación de Requerimiento</legend>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.TextAreaFor(model => model.Requerimiento.descripcion, new { @class = "form-control", rows = 4, @readonly = true })
                            @Html.ValidationMessageFor(model => model.Requerimiento.descripcion, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.TextAreaFor(model => model.Requerimiento.observaciones, new { @class = "form-control", rows = 4, @readonly = true })
                            @Html.ValidationMessageFor(model => model.Requerimiento.observaciones, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset name="generalinfo">
                        <legend>Datos Generales</legend>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.modulo, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Requerimiento.modulo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Requerimiento.modulo, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Requerimiento.estado, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Requerimiento.estado, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requerimiento.sprint, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Requerimiento.sprint, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Requerimiento.sprint, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset name="generalinfo">
                        <legend >Criterios de aceptacion</legend>
                        <legend class = "control-label col-md-2"> </legend>
                        @{
                            var Criterios = "";
                            foreach (var criterio in Model.listaCriterios) {
                                Criterios +="*" + criterio.criterio + "\n";
                            }

                            @Html.TextAreaFor(model => Criterios, new { @class = "form-control", rows = 4, @readonly = true })
                            <br /><br />
                        }
                    </fieldset>
                </dl>
            </div>
        </div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>
            function esconderEditar() {
                load_all();
                $('.elementoEditar').hide();
                $('.elementoModificar').show();

            };
            function esconderDetalles() {
                $('.elementoModificar').hide();
                $('.elementoEditar').show();

            };

            function cancelar() {

                window.location.replace('../ReqFuncional');

            }
            function CancelarE() {
                if (confirm("Esta seguro que desea borrar este Requerimiento Funcional ?")) {
                    return true;
                } else {
                    return false;
                }

            }

    </script>
        <script>

            i = 0;

            function update_output() {
                var values = $(".multitextbox")
                          .map(function () { return $(this).val(); }).get().filter(v=>v != '').join("|");
                $("#output").val(values);
            }

            function delete_all(button) {
                $("#" + button.id).remove();
                update_output();
            }

            function add_textbox() {
                $("#textboxes").append("<div id='textbox" + i + "'><input type='text' style='width:20em; margin-left:15em;' class='form-control col-md-2 multitextbox multitextbox" + i + "' oninput=update_output()> <button onclick='delete_all(this)' class='btn' id= textbox" + i + ">x</button> <br/><br/> </div>");
                var tbid = "multitextbox" + i;
                i++;

                return tbid;
            }

            function load_all() {
                var inputs = $("#output").val().split("|");
                for (var j = 0; j < inputs.length; j++) {
                    var tbid = add_textbox();
                    console.log("." + tbid)
                    $("." + tbid).val(inputs[j]);
                }
            }

            function cambio() {
                var input = document.getElementById("uploadBtn");

                var fReader1 = new FileReader();
                fReader1.readAsDataURL(input.files[0]);
                fReader1.onloadend = function (event) {
                    var img = document.getElementById("RuPic");
                    img.src = event.target.result;
                    document.getElementById("ImagenR").value = event.target.result;
                }
            }
            function load_all() {
                var inputs = $("#output").val().split("|");
                for (var j = 0; j < inputs.length; j++) {
                    var tbid = add_textbox();
                    console.log("." + tbid)
                    $("." + tbid).val(inputs[j]);
                }
            }
        </script>


<script type="text/javascript">
    $(function () {
        $('.datepicker, .datepicker2').datepicker("setDate", new Date()); //Initialise any date pickers
    });
    $(".datepicker").on("dp.change", function (e) {
        $('.datepicker2').data("DatePicker").setMinDate(e.date);
    });
    $(".datepicker2").on("dp.change", function (e) {
        $('.datepicker').data("DatePicker").setMaxDate(e.date);
    });
</script>
    }
