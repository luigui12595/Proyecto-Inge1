@model ProyectoInge1.Models.ModReqFuncionalInter

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.js"> </script>
<script>
i = 0;

function update_output() {
	var values = $(".multitextbox")
              .map(function(){return $(this).val();}).get().filter(v=>v!='').join("|");
	$("#output").val(values);
}

function delete_all(button) {
	$("#" + button.id).remove();
	update_output();
}

function add_textbox() {
    $("#textboxes").append("<div id='textbox" + i + "'><input type='text' style='width:20em; margin-left:15em;' class='form-control col-md-2 multitextbox multitextbox" + i + "' oninput=update_output()> <button onclick='delete_all(this)' class='btn' id= textbox" + i + ">x</button> <br/><br/> </div>");
	var tbid = "multitextbox" + i;
	i++;

	return tbid;
}
function load_all() {
    var inputs = $("#output").val().split("|");
    for (var j = 0; j < inputs.length; j++) {
        var tbid = add_textbox();
        console.log("." + tbid)
        $("." + tbid).val(inputs[j]);
    }
}

window.onload = load_all
</script>


<h2>Requerimientos Funcionales</h2>


        <h4>Crear</h4>
        <hr />
@using (Html.BeginForm())
{
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--AGREGAR UN ID DE REQUERIMIENTO-->
        

            <!--AGREGAR UN PROYECTO DE REQUERIMIENTO-->
            <div class="form-group">
                <label class="control-label col-md-2">proyecto</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Requerimientos.nomProyecto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Requerimientos.nomProyecto, "", new { @class = "text-danger" })
                </div>

            </div>
        
               <div class="form-group">
            <label class="control-label col-md-2">Nombre:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Requerimientos.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Requerimientos.nombre, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Sprint:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Requerimientos.sprint, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Requerimientos.sprint, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Modulo:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Requerimientos.modulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Requerimientos.modulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Descripcion:</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Requerimientos.descripcion, new { @class = "form-control", rows = "4", placeholder = "250 Carácteres máximo" })
                @Html.ValidationMessageFor(model => model.Requerimientos.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Observaciones:</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Requerimientos.observaciones, new { @class = "form-control", rows = "4", placeholder = "250 Carácteres máximo" })
                @Html.ValidationMessageFor(model => model.Requerimientos.observaciones, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Imagen:</label>
            <div class="editor-field">
                <input id="ImagePath" title="Upload a product image"
                       type="file" name="file" />
                <!--Html.TextAreaFor(model => model.RequerimientosF.imagen , new { htmlAttributes = new { class = "form-control" } })-->
                @Html.ValidationMessageFor(model => model.Requerimientos.imagen, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Fuente:</label>
            <div class="col-md-10">
              @*  @{
                    var UserProyectList = Model.listaUsuario;
                    var UserList = Model.UsuariosSistema;
                    foreach (var userProj in UserProyectList)
                    {
                        foreach (var user in UserList)
                        {
                            if (userProj.cedula.Equals(user.cedula))
                            {
                                <option value=user.cedula>
                                    @Html.DropDownListFor(model => model.Requerimientos.fuente, new[] { new SelectListItem() { Text = user.nombre.ToString() + " " + user.apellidos.ToString(), Value = user.cedula } }, "--Fuente no asignada--", new { @class = "form-control" })
                                </option>
                                    @* @Html.EditorFor(usr => user.nombre, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            }
                        }

                    }
                }*@
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Responsable 1:</label>
            <div class="col-md-10">
                <!--Html.EditorFor(model => model , new { htmlAttributes = new { class = "form-control" } })
                Html.ValidationMessageFor(model => model.modulo, "", new { class = "text-danger" })-->

            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Responsable 2:</label>
            <div class="col-md-10">
               
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Fecha Inicial:</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Requerimientos.fechaInicial, new { @class = "form-control datepicker", placeholder = "DATE" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Fecha Final:</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Requerimientos.fechaFinal, new { @class = "form-control datepicker2", placeholder = "DATE" })
            </div>
        </div>


                @*Criterio De Aceptacion*@
                <label class="control-label col-md-2">Criterios de aceptacion:</label><br />
                @Html.HiddenFor(model => model.values, new { @id = "output" })
                <input type="text" id="output" value=" " style="display:none"><br/>

                <a onclick="add_textbox()" class="btn btn-primary">Agregar Criterio</a>
                <div id="textboxes">
                <br/>
                </div>


                @*Criterio De Aceptacion*@
 
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-5">
                        <input type="submit" value="Aceptar" class="btn btn-primary" />
                        <div class="btn btn-danger" style="color:white;" />
                        @Html.ActionLink("Cancelar", "Index", null, new { @style = "color:#FFFFFF;" })
                    </div>
                </div>
}
           



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
                         $(function () {
                             $('.datepicker, .datepicker2').datepicker("setDate", new Date()); //Initialise any date pickers
                         });
                         $(".datepicker").on("dp.change", function (e) {
                             $('.datepicker2').data("DatePicker").setMinDate(e.date);
                         });
                         $(".datepicker2").on("dp.change", function (e) {
                             $('.datepicker').data("DatePicker").setMaxDate(e.date);
                         });
    </script>

}