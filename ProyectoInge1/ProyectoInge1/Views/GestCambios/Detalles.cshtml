@model ProyectoInge1.Models.ModGestionCambios
@using ProyectoInge1.Helpers
<script>
    function esconderEditar() {
        $('.elementoDetalles').hide();
        $('.elementoModificar').show();
    }

    function cancelar() {
        $('.elementoDetalles').show();
        $('.elementoModificar').hide();
    }

    function borrar(element) {
        var elementid = element.id;
        window.location.replace('../Index')
    }

    function goToReqFun(element) {
        var elementId = element.id;
        window.location.replace('../../ReqFuncional/Index/' + elementId)
    }

    function CancelarE() {
        if (confirm("Esta seguro que desea borrar este proyecto ?")) {
            return true;
        } else {
            return false;
        }

    }

</script>

@{
    ViewBag.Title = "Detalles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Solicitudes de cambio</h2>

    <h4 class="elementoDetalles">Detalles de Solicitudes</h4>
    <h4 class="elementoModificar" style="display:none">Modificación de Solicitudes</h4>
    <hr />
    <div class="col-lg-2 col-lg-push-1">
        <a class="btn btn-success" " onclick="esconderEditar()">Modificar</a>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken(){
            <div class="elementoModificar" style="display:none">
                <br /><br /><br />
                @*nombre Del proyecto*@
                <div class="form-group">
                    
                    <div class="col-md-10">
                        
                        @Html.HiddenFor(model => model.Solicitud.nomProyecto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.estado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.fecha, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.prioridadRF, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.esfuerzoRF, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.descripcionRF, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.fechaFinalRF, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.fechaInicialRF, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.moduloRF, new { htmlAttributes = new { @class = "form-control" } })
                        
                        @Html.HiddenFor(model => model.Solicitud.idReqFunc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.nombreRF, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.versionRF, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.observacionesRF, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Solicitud.moduloRF, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.HiddenFor(model => model.Solicitud.Usuario, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.Solicitud.Usuario1, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.Solicitud.Usuario2, new { htmlAttributes = new { @class = "form-control" } })*@
                    </div>
                </div>
                <br /><br />
               
                <div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Solicitud.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Solicitud.estado, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.Solicitud.estado, "", new { @class = "text-danger" })
                    </div>
                </div><br /><br />
                @*Persona que desea realizar el cambio *@
                <div class="form-group">
                    <label class="control-label col-md-2">Interesado por el cambio:(Tal vez editable)</label>
                    <div class="col-md-10" style="padding-top:0.5em;">
                       
                        <!--Html.DropDrownListFor(model => model.Solicitud.realizadoPor, new SelectList( ViewBag.Lista, "nombre","cedula"));-->
                        @Html.DropDownListFor(model => model.Solicitud.realizadoPor, new SelectList(ViewBag.Lista, "cedula", "names"))
                    </div>
                </div>
                <br /><br />
                @*Razon por la que se desea realizar el cambio *@
                <div class="form-group">
                    <label class="control-label col-md-2">Razon de la solicitud:(editable)</label>
                    <div class="col-md-10">
                   @Html.TextAreaFor(model => model.Solicitud.razon, new { @class = "form-control", rows = "4" })
                @Html.ValidationMessageFor(model => model.Solicitud.razon, "", new { @class = "text-danger" })
                    </div>
                </div><br /><br />
   
                @*Botones*@
                <div class="form-horizontal">
                    <hr />
                    <div class="elementoModificar" style="display:none">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Aceptar" class="btn btn-primary" />
                                <a class="btn btn-danger" onclick="cancelar()">Cancelar</a>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        }
    }
</div>
