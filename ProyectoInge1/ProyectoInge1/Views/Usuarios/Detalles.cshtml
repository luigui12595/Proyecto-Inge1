
@model ProyectoInge1.Models.ModUsuarioInter
<script>
    function esconderEditar() {
        $('.elementoEditar').hide();
        $('.elementoModificar').show();

    }
    function cancelar() {
        window.location.replace('../../Usuarios')

    }
    function myFunction() {
        var r = confirm("Esta seguro que desea eliminar este usuario?");
        if (r == true) {
            alert("verdadero");
        } else {
            alert("falso");
            window.location.replace('../../Usuarios')
        }
    }
    function borrar(element) {
        myFunction();       
    }
</script>
@{
    ViewBag.Title = "Detalles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Gestion de Usuarios</h2>
    <div class="form-horizontal">
        <div class="elementoModificar" style="display:none">
@using (Html.BeginForm("Detalles", "Usuarios", FormMethod.Post, new { @class = "form-horizontal", role = "form", style = "display:inline;padding-left:5px;" }))
{
    @Html.AntiForgeryToken()
            <h4>Modificar de Usuario</h4>
            <hr />
             <dl class="dl-horizontal">
             @*Cedula Modificar*@
                <div class="form-group">
                    @Html.LabelFor(model => model.modeloUsuario.cedula, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modeloUsuario.cedula, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.cedula, "", new { @class = "text-danger" })
                </div>


                @*Nombre Modificar*@
                <div class="form-group">
                    @Html.LabelFor(model => model.modeloUsuario.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modeloUsuario.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.nombre, "", new { @class = "text-danger" })
                </div>


                @*Apellidos Modificar*@

                <div class="form-group">
                    @Html.LabelFor(model => model.modeloUsuario.apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modeloUsuario.apellidos, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.apellidos, "", new { @class = "text-danger" })
                </div>


                @*Correo Modificar*@
                <div class="form-group">
                    @Html.LabelFor(model => model.modeloUsuario.correo, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modeloUsuario.correo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.correo, "", new { @class = "text-danger" })
                </div>


                @*Telefono 1 Modificar*@
                <div class="form-group">
                   <label class="control-label col-md-2">Telefono 1:</label>
                    @Html.EditorFor(model => model.modeloTelefono1.numero, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.Telefono, "", new { @class = "text-danger" })
                </div>


                @*Telefono 2 Modificar*@
                <div class="form-group">
                    <label class="control-label col-md-2">Telefono 2:</label>
                    @Html.EditorFor(model => model.modeloTelefono2.numero, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloTelefono2.numero, "", new { @class = "text-danger" })
                </div>
                @*Proyecto Modificar, no implementado en este sprint*@
                <div class="form-group" style="display:none">
                    <dt>Proyecto </dt>
                    @Html.EditorFor(model => model.modeloProyecto.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.nombre, "", new { @class = "text-danger" })
                </div>

                @*id usuario no editable, oculto*@
                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.modeloUsuario.id, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modeloUsuario.id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.id, "", new { @class = "text-danger" })
                </div>


                @*Lider usuario no editable, oculto*@
                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.modeloUsuario.lider, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modeloUsuario.lider, new { htmlAttributes = new { @readonly = true } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.lider, "", new { @class = "text-danger" })
                </div>

                @*Rol editable*@
                <div class="form-group">
                     <label class="control-label col-md-2">Rol:</label>
                     <div class="col-md-9 col-md-pull-1" style="padding-top:0.5em; margin-left:6em;">
                         @Html.DropDownListFor(model => model.Role,
                             new[] {    new SelectListItem() { Text = "-- Rol no Asignado --", Value = "" },
                                        new SelectListItem() { Text = "Administrador", Value = "1" },
                                        new SelectListItem() { Text = "Desarrollador", Value = "2" },
                                        new SelectListItem() { Text = "Usuario", Value = "3" } }, new { @class = "form-control" })
                     </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-primary">Aceptar</button>
                        <a class="btn btn-danger" onclick="cancelar()">Cancelar</a>
                    </div>
                </div>
            </dl>
}
        </div>
    </div>

@*---------------------------------------Detalles------------------------------------------------*@
    <div class="elementoEditar">
@using (Html.BeginForm("Eliminar", "Usuarios", FormMethod.Post, new { @class = "form-horizontal", role = "form", style = "display:inline;padding-left:5px;" }))
{
    @Html.AntiForgeryToken()
    <h4>Detalles de Usuario</h4>
        <hr />
        <div class="form-horizontal">
            <a class="btn btn-success" onclick="esconderEditar()">Modificar</a>
            <div class="col-lg-2 col-lg-push-6">
                <button type="submit" class="btn btn-danger">Eliminar</button>

            </div>
            <dl class="dl-horizontal">

                @*Cedula Modificar*@
                <div class="form-group">
                    @Html.LabelFor(model => model.modeloUsuario.cedula, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modeloUsuario.cedula, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.cedula, "", new { @class = "text-danger" })
                </div>


                @*Nombre Modificar*@
                <div class="form-group">
                    @Html.LabelFor(model => model.modeloUsuario.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modeloUsuario.nombre, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.nombre, "", new { @class = "text-danger" })
                </div>


                @*Apellidos Modificar*@

                <div class="form-group">
                    @Html.LabelFor(model => model.modeloUsuario.apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modeloUsuario.apellidos, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.apellidos, "", new { @class = "text-danger" })
                </div>


                @*Correo Modificar*@
                <div class="form-group">
                    @Html.LabelFor(model => model.modeloUsuario.correo, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modeloUsuario.correo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.correo, "", new { @class = "text-danger" })
                </div>


                @*Telefono 1 Modificar*@
                <div class="form-group">
                    <label class="control-label col-md-2">Telefono 1:</label>
                    @Html.EditorFor(model => model.modeloTelefono1.numero, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.modeloUsuario.Telefono, "", new { @class = "text-danger" })
                </div>


                @*Telefono 2 Modificar*@
                <div class="form-group">
                    <label class="control-label col-md-2">Telefono 2:</label>
                    @Html.EditorFor(model => model.modeloTelefono2.numero, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.modeloTelefono2.numero, "", new { @class = "text-danger" })
                </div>
                @*Proyecto Modificar, no implementado en este sprint*@
                <div class="form-group" style="display:none">
                    <dt>Proyecto </dt>
                    @Html.EditorFor(model => model.modeloProyecto.nombre, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.nombre, "", new { @class = "text-danger" })
                </div>
                @*Proyecto Modificar, no implementado en este sprint*@
                <div class="form-group" style="display:none">
                    <dt>Proyecto </dt>
                    @Html.EditorFor(model => model.modeloProyecto.nombre, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.modeloProyecto.nombre, "", new { @class = "text-danger" })
                </div>
                @*Rol Modificar*@
                <div class="form-group">
                    <label class="control-label col-md-2">*Rol:</label>
                    @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>
            </dl>

            <div>
                @Html.ActionLink("Volver", "Index", null,null,new { @class = "btn btn-default" })
            </div>
        </div>
}


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }