
@model ProyectoInge1.Models.ModUsuarioInter
<script>
    function esconderEditar() {
        $('.elementoEditar').hide();
        $('.elementoModificar').show();

    }
    function cancelar() {
        window.location.replace('../Index')

    }
    function borrar(element) {
        var elementid = element.id;
        window.location.replace('../Eliminar/'+elementid)
    }
</script>
@{
    ViewBag.Title = "Detalles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Detalles</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div>
    <h4>Detalles de Usuario</h4>
    <hr />
    <div class="elementoModificar" style="display:none">
        <dl class="dl-horizontal">

@*Nombre Modificar*@            
                    <div class="form-group">
                        <dt>Nombre </dt>                  
                            @Html.EditorFor(model => model.modeloUsuario.nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.modeloUsuario.nombre, "", new { @class = "text-danger" })                       
                    </div>


@*Apellidos Modificar*@

                    <div class="form-group">
                        <dt>Apellidos </dt>  
                            @Html.EditorFor(model => model.modeloUsuario.apellidos, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.modeloUsuario.apellidos, "", new { @class = "text-danger" })
                    </div>


@*Cedula Modificar*@
                    <div class="form-group">
                        <dt>Cedula </dt>  
                            @Html.EditorFor(model => model.modeloUsuario.cedula, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.modeloUsuario.cedula, "", new { @class = "text-danger" })
                    </div>


@*Correo Modificar*@
                    <div class="form-group">
                        <dt>Correo </dt>  
                            @Html.EditorFor(model => model.modeloUsuario.correo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.modeloUsuario.correo, "", new { @class = "text-danger" })
                    </div>


@*Telefono 1 Modificar*@
                    <div class="form-group">
                        <dt>Telefono </dt>  
                            @Html.EditorFor(model => model.modeloTelefono1.numero, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.modeloUsuario.Telefono, "", new { @class = "text-danger" })
                    </div>
                                 

@*Telefono 2 Modificar*@
                    <div class="form-group">
                        <dt>Telefono </dt>  
                            @Html.EditorFor(model => model.modeloTelefono2.numero, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.modeloTelefono2.numero, "", new { @class = "text-danger" })
                    </div>
@*Proyecto Modificar, no implementado en este sprint*@
            <div class="form-group">
                <dt>Proyecto </dt>
                @Html.EditorFor(model => model.modeloProyecto.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloProyecto.nombre, "", new { @class = "text-danger" })
            </div>

@*id usuario no editable, oculto*@
                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.modeloUsuario.id, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.modeloUsuario.id, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.modeloUsuario.id, "", new { @class = "text-danger" })
                </div>


@*Lider usuario no editable, oculto*@
                <div class="form-group"style="display:none">
                    @Html.LabelFor(model => model.modeloUsuario.lider, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.modeloUsuario.lider, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.modeloUsuario.lider, "", new { @class = "text-danger" })
                </div>


@*Rol editable*@
                <dt>
                    Rol
                </dt>

                <dd>
                    <select>
                        <option value="admin">Administrador</option>
                        <option value="usser">Usuario</option>
                        <option value="desarr">Desarrollador</option>
                    </select>
                </dd>
                <div class="form-group">                    
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Aceptar" class="btn btn-default" />
                        <a class="btn btn-default" onclick="cancelar()">Cancelar</a>
                    </div>

                </div>
            </dl>
        </div>
    </div>
@*---------------------------------------Detalles------------------------------------------------*@
    <div class="elementoEditar">
        <a class="btn btn-default" onclick="esconderEditar()">Modificar</a>
        <div class="col-lg-2 col-lg-push-6">
         <a class="btn btn-default" id='@(Model.modeloUsuario.cedula)' onclick="borrar(this)">Eliminar</a>
        </div>
        <dl class="dl-horizontal">
            @*
                Nombre Detalles
            *@
            <div>
                <dt>
                    Nombre
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.modeloUsuario.nombre)
                </dd>
            </div>

            @*
                Apellidos Detalles
            *@
            <div>
                <dt>
                    Apellidos
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.modeloUsuario.apellidos)
                </dd>
            </div>
            @*
                Cedula Detalles
            *@
            <div>
                <dt>
                    Cedula
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.modeloUsuario.cedula)
                </dd>
            </div>
            @*
                Telefono 1 Detalles
            *@
            <div>
                <dt>
                    Telefono
                </dt>

                <dd>
                    @if ( 1 <= Model.listaTelefono.Count)
                    { 
                        @Html.DisplayFor(model => model.listaTelefono.ElementAt(0).numero)
                    }
                </dd>
            </div>
            @*
                Telefono 2 Detalles
            *@
            <div>
                <dt>
                    Telefono
                </dt>

                <dd>
                    @if (1 < Model.listaTelefono.Count)
                    {
                        @Html.DisplayFor(model => model.listaTelefono.ElementAt(1).numero)
                    }    
                </dd>
            </div>
            @*
                Proyecto Detalles
            *@

            <div>
                <dt>
                    Proyecto
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.modeloProyecto.nombre)
                </dd>
            </div>
        @*
            Rol Detalles
        *@
        <div>
            <dt>
                Rol
            </dt>
            <dd>
                Administrador
            </dd>
        </div>
        </dl>

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
 </div>

    <p>
    </p>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }